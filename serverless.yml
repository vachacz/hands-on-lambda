
service: hands-on-lambda

plugins:
- serverless-plugin-existing-s3

provider:
  name: aws
  profile: vachacz
  region: eu-west-1

  iamRoleStatements:
  - Effect: "Allow"
    Action: "s3:*"
    Resource:
      - "arn:aws:s3:::pl.vachacz.transcoding-input/*"
      - "arn:aws:s3:::pl.vachacz.transcoding-staging/*"
      - "arn:aws:s3:::pl.vachacz.transcoding-output/*"

  - Effect: "Allow"
    Action: "sqs:*"
    Resource: "arn:aws:sqs:::s3-transcode-request"

package:
  individually: true

functions:

  lambda-untar:
    name:
      lambda-untar
    description:
      Lambda responsible for untar'ing source ZIP files and storing extracted files in S3 bucket.
    runtime: python3.7
    memorySize: 3008 # mb
    timeout: 600 # seconds
    handler: untar_handler.untar_s3_file
    events:
    - existingS3:
        bucket: pl.vachacz.transcoding-input
        events:
        - s3:ObjectCreated:*
    environment:
      STAGING_BUCKET: pl.vachacz.transcoding-staging
    tags:
      category: s3-triggered
    package:
      artifact: lambda-untar/build/distributions/lambda-untar.zip

  lambda-transcode:
    name:
      lambda-transcode
    description:
      Lambda responsible for transcoding .gz.xml files and storing output csv file in S3 bucket.
    runtime: java8
    events:
      - sqs:
          arn:
            Fn::GetAtt: ["TranscodingQueue", "Arn"]
          batchSize: 10
    memorySize: 1024 # mb
    timeout: 120 # seconds
    handler: pl.vachacz.TranscodeLambda
    environment:
      OUTPUT_BUCKET: pl.vachacz.transcoding-output
    tags:
      category: sqs-triggered
    package:
      artifact: lambda-transcode/build/distributions/lambda-transcode.zip

resources:
  Resources:

    TranscodingQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: s3-transcode-request
        VisibilityTimeout: 60

    ImportQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: s3-import-request
        VisibilityTimeout: 60

    # setting DLQ for the lambda is not supported. it's possible to do it via a plugin only
    LambdaTranscodeDlq:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: dlq-lambda-transcode

    # setting DLQ for the lambda is not supported. it's possible to do it via a plugin only
    LambdaUntarDlq:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: dlq-lambda-untar

    QueueAccessPolicy:
      Type: AWS::SQS::QueuePolicy
      Properties:
        PolicyDocument:
          Id: Allow-s3-publish
          Statement:
          - Sid: Allow-s3-publish
            Effect: Allow
            Principal: "*"
            Action:
            - sqs:*
            Resource: "*"
        Queues:
          - !Ref TranscodingQueue
          - !Ref ImportQueue

    TranscodingInputFolder:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: pl.vachacz.transcoding-input

    TranscodingStagingFolder:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: pl.vachacz.transcoding-staging
        NotificationConfiguration:
          QueueConfigurations:
          - Event: s3:ObjectCreated:*
            Queue: !GetAtt TranscodingQueue.Arn

    TranscodingOutputFolder:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: pl.vachacz.transcoding-output
        NotificationConfiguration:
          QueueConfigurations:
          - Event: s3:ObjectCreated:*
            Queue: !GetAtt ImportQueue.Arn
